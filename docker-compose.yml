version: '3.8'

services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    ports:
      - 5432:5432
    env_file: .env.docker
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      start_period: 15s
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    env_file: .env.docker
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api
      - --certificatesresolvers.le.acme.email=dorbalmas77@gmail.com
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      # Dashboard
      # - "traefik.http.routers.traefik.rule=Host(`dashboard.tivlotcv.com`)"
      # - "traefik.http.routers.traefik.service=api@internal"
      # - "traefik.http.routers.traefik.tls=true"
      # - "traefik.http.routers.traefik.tls.certresolver=le"
      # - "traefik.http.routers.traefik.entrypoints=websecure"
      # - "traefik.http.routers.traefik.middlewares=authtraefik"
      # - "traefik.http.middlewares.authtraefik.basicauth.users=devAdmin:$$2y$$05$$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq" # user:devAdmin, password:devto
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped
    
  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    container_name: server
    env_file: .env.docker 
    depends_on:
      - traefik
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.entrypoints=websecure"
      - "traefik.http.routers.server.tls=true"
      - "traefik.http.routers.server.tls.certresolver=le"
      - "traefik.http.routers.server.rule=Host(`tivlotcv.com`) && PathPrefix(`/api/`)"
      - "traefik.http.routers.server.middlewares=server-stripprefix"
      # - "traefik.http.routers.server.middlewares=auth,server-stripprefix"
      - "traefik.http.middlewares.server-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.server-stripprefix.stripprefix.forceslash=true"
      # - "traefik.http.middlewares.authtraefik.basicauth.users=devAdmin:$$2y$$05$$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq"
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: client
    env_file: .env.docker
    depends_on:
      - traefik
      - server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`tivlotcv.com`)"
      # - "traefik.http.routers.client.middlewares=auth"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls=true"
      - "traefik.http.routers.client.tls.certresolver=le"
      # - "traefik.http.middlewares.authtraefik.basicauth.users=devAdmin:$$2y$$05$$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq"
    restart: unless-stopped

volumes:
  pgdata:
  pgadmin-data:
